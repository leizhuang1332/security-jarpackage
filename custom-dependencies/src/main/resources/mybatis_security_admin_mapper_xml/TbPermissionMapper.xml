<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lz.admin.mapper.TbPermissionMapper">
    <resultMap id="BaseResultMap" type="com.lz.admin.bean.TbPermission">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="enname" jdbcType="VARCHAR" property="enname"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="created" jdbcType="VARCHAR" property="created"/>
        <result column="updated" jdbcType="VARCHAR" property="updated"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, parent_id, name, enname, url, description, created, updated
  </sql>
    <sql id="Base_Column_List2">
    p.id, p.parent_id, p.name, p.enname, p.url, p.description, p.created, p.updated
  </sql>
    <select id="selectByExample" parameterType="com.lz.admin.bean.TbPermissionExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from tb_permission
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from tb_permission
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tb_permission
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.lz.admin.bean.TbPermissionExample">
        delete from tb_permission
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.lz.admin.bean.TbPermission">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into tb_permission (parent_id, name, enname,
        url, description, created,
        updated)
        values (#{parentId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{enname,jdbcType=VARCHAR},
        #{url,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{created,jdbcType=VARCHAR},
        #{updated,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.lz.admin.bean.TbPermission">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into tb_permission
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="enname != null">
                enname,
            </if>
            <if test="url != null">
                url,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="created != null">
                created,
            </if>
            <if test="updated != null">
                updated,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="parentId != null">
                #{parentId,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="enname != null">
                #{enname,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                #{url,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="created != null">
                #{created,jdbcType=VARCHAR},
            </if>
            <if test="updated != null">
                #{updated,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.lz.admin.bean.TbPermissionExample" resultType="java.lang.Long">
        select count(*) from tb_permission
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <select id="listByRoleId" resultType="com.lz.admin.bean.TbPermission">
        select <include refid="Base_Column_List2"/>
        from tb_role  r
        right join tb_role_permission rp on r.id=rp.role_id
        right join tb_permission p on rp.permission_id = p.id
        where r.id=#{roleId}
        order by p.id
    </select>
    <select id="listByUserId" resultType="com.lz.admin.bean.TbPermission">
        select <include refid="Base_Column_List2"/>
        from tb_user  u
        right join tb_user_role ur on u.id=ur.user_id
        right join tb_role_permission rp on ur.role_id=rp.role_id
        right join tb_permission p on rp.permission_id = p.id
        WHERE u.id=#{userId}
        order by p.id
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update tb_permission
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.parentId != null">
                parent_id = #{record.parentId,jdbcType=BIGINT},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.enname != null">
                enname = #{record.enname,jdbcType=VARCHAR},
            </if>
            <if test="record.url != null">
                url = #{record.url,jdbcType=VARCHAR},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=VARCHAR},
            </if>
            <if test="record.created != null">
                created = #{record.created,jdbcType=VARCHAR},
            </if>
            <if test="record.updated != null">
                updated = #{record.updated,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tb_permission
        set id = #{record.id,jdbcType=BIGINT},
        parent_id = #{record.parentId,jdbcType=BIGINT},
        name = #{record.name,jdbcType=VARCHAR},
        enname = #{record.enname,jdbcType=VARCHAR},
        url = #{record.url,jdbcType=VARCHAR},
        description = #{record.description,jdbcType=VARCHAR},
        created = #{record.created,jdbcType=VARCHAR},
        updated = #{record.updated,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.lz.admin.bean.TbPermission">
        update tb_permission
        <set>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="enname != null">
                enname = #{enname,jdbcType=VARCHAR},
            </if>
            <if test="url != null">
                url = #{url,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="created != null">
                created = #{created,jdbcType=VARCHAR},
            </if>
            <if test="updated != null">
                updated = #{updated,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.lz.admin.bean.TbPermission">
    update tb_permission
    set parent_id = #{parentId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      enname = #{enname,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      created = #{created,jdbcType=VARCHAR},
      updated = #{updated,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>